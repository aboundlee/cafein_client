{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/cafein_server/client/src/components/Cafemarker.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Marker } from 'react-naver-maps'; // 패키지 불러오기\n\nimport './marker.css';\n\nconst CustomMarker = (marker_div, busyPercent, name, busyText, franchiseIcon) => {\n  const navermaps = window.naver.maps;\n  let percent = '<span class=\"percent\">%</span>';\n  if (busyPercent === null) percent = null;\n  return {\n    content: [marker_div, '<div class=\"franchise_icon\">', franchiseIcon, '</div>', '<div class=\"icon_div\">', '<p class=\"busy_percent\">', busyPercent, percent, '</p>', '</div>', '</div>'].join(''),\n    size: new navermaps.Size(48, 48),\n    anchor: new navermaps.Point(11, 35)\n  }; // return (\n  // \t{\n  //     content:[ \n  // \t\t\t\t\tmarker_div,\n  // \t\t\t\t\t\t'<div class=\"franchise_icon\">',\n  // \t\t\t\t\t\t\tfranchiseIcon,\n  // \t\t\t\t\t\t'</div>',\n  // \t\t\t\t \t\t'<div class=\"icon_div\">',\n  // \t\t\t\t\t\t\t'<p class=\"busy_text\">',\n  // \t\t\t\t\t\t\tbusyText,\n  // \t\t\t\t\t\t\t'</p>',\n  // \t\t\t\t\t\t'</div>',\n  // \t\t\t\t\t'</div>'].join(''),\n  //     size: new navermaps.Size(48, 48),\n  //     anchor: new navermaps.Point(11, 35)\n  //     }\n  // )\n};\n/*\nconst CustomMarker = (marker_div,busy, name, icon_img) => {\n\tconst navermaps = window.naver.maps;\n\n\treturn (\n\t\t{\n        content:[ \n\t\t\t\t\t\tmarker_div,\n\t\t\t\t\t \t\t'<div class=\"icon_div\">',\n\t\t\t\t\t\t\t\ticon_img,\n\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t'<div class=\"busy\">',\n\t\t\t\t\t\t\t\tparseInt(busy),\n\t\t\t\t\t\t\t'<div>',\n\t\t\t\t\t\t'</div>'].join(''),\n\n        size: new navermaps.Size(48, 48),\n        anchor: new navermaps.Point(11, 35)\n    }\n\t)\n}\n*/\n\n\nconst CafeMarker = ({\n  lat,\n  lng,\n  busy,\n  busy_color,\n  cafe_name\n}) => {\n  let title,\n      marker_div,\n      franchiseIcon = '',\n      iconImgArray,\n      rand_index,\n      busyText = '';\n  iconImgArray = ['<img src=\"/images/marker/HollysCoffee.svg\" class=\"franchise_img\" alt=\"cafe\">', '<img src=\"/images/marker/Starbucks.svg\" class=\"franchise_img\" alt=\"cafe\">', '<img src=\"/images/marker/TomNToms.svg\" class=\"franchise_img\" alt=\"cafe\">'];\n  rand_index = parseInt(busy) % 3;\n  marker_div = '<div class=\"map_marker_div';\n  franchiseIcon = iconImgArray[rand_index];\n\n  if (busy_color === 'red') {\n    title = 'red_marker';\n    marker_div = marker_div + ' busy_red\">';\n    busyText = \"많음\";\n  } else if (busy_color === 'yellow') {\n    title = 'yellow_marker';\n    marker_div = marker_div + ' busy_yellow\">';\n    busyText = \"보통\";\n  } else if (busy_color === 'green') {\n    title = 'green_marker';\n    marker_div = marker_div + ' busy_green\">';\n    busyText = \"적음\";\n  } else if (busy_color === 'grey') {\n    title = 'grey_marker';\n    marker_div = marker_div + ' busy_grey\">';\n  }\n\n  let busyPercent = parseInt(busy);\n  if (busyPercent === -1) busyPercent = null;\n  return /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: lat,\n      lng: lng\n    },\n    icon: CustomMarker(marker_div, busyPercent, cafe_name, busyText, franchiseIcon),\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  });\n};\n\nCafeMarker.propTypes = {\n  lat: PropTypes.number.isRequired,\n  lng: PropTypes.number.isRequired,\n  busy: PropTypes.string.isRequired,\n  busy_color: PropTypes.string.isRequired,\n  cafe_name: PropTypes.string.isRequired\n};\nexport default CafeMarker;","map":{"version":3,"sources":["/home/ec2-user/cafein_server/client/src/components/Cafemarker.js"],"names":["React","PropTypes","Marker","CustomMarker","marker_div","busyPercent","name","busyText","franchiseIcon","navermaps","window","naver","maps","percent","content","join","size","Size","anchor","Point","CafeMarker","lat","lng","busy","busy_color","cafe_name","title","iconImgArray","rand_index","parseInt","propTypes","number","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Marker } from 'react-naver-maps'; // 패키지 불러오기\nimport './marker.css';\n\n\nconst CustomMarker = (marker_div, busyPercent, name, busyText, franchiseIcon) => {\n\tconst navermaps = window.naver.maps;\n    let percent = '<span class=\"percent\">%</span>';\n    \n    \n    if (busyPercent===null)\n        percent = null;\n\n\n\n\treturn (\n\t\t{\n        content:[ \n\t\t\t\t\t\tmarker_div,\n\t\t\t\t\t\t\t'<div class=\"franchise_icon\">',\n\t\t\t\t\t\t\t\tfranchiseIcon,\n\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t \t\t'<div class=\"icon_div\">',\n\t\t\t\t\t\t\t\t'<p class=\"busy_percent\">',\n                                busyPercent,\n                                percent,\n\t\t\t\t\t\t\t\t'</p>',\n\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t'</div>'].join(''),\n\n        size: new navermaps.Size(48, 48),\n        anchor: new navermaps.Point(11, 35)\n        }\n    )\n    \n\n       \n\t// return (\n\t// \t{\n    //     content:[ \n\t// \t\t\t\t\tmarker_div,\n\t// \t\t\t\t\t\t'<div class=\"franchise_icon\">',\n\t// \t\t\t\t\t\t\tfranchiseIcon,\n\t// \t\t\t\t\t\t'</div>',\n\t// \t\t\t\t \t\t'<div class=\"icon_div\">',\n\t// \t\t\t\t\t\t\t'<p class=\"busy_text\">',\n\t// \t\t\t\t\t\t\tbusyText,\n\t// \t\t\t\t\t\t\t'</p>',\n\t// \t\t\t\t\t\t'</div>',\n\t// \t\t\t\t\t'</div>'].join(''),\n\n    //     size: new navermaps.Size(48, 48),\n    //     anchor: new navermaps.Point(11, 35)\n    //     }\n\t// )\n}\n/*\nconst CustomMarker = (marker_div,busy, name, icon_img) => {\n\tconst navermaps = window.naver.maps;\n\n\treturn (\n\t\t{\n        content:[ \n\t\t\t\t\t\tmarker_div,\n\t\t\t\t\t \t\t'<div class=\"icon_div\">',\n\t\t\t\t\t\t\t\ticon_img,\n\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t'<div class=\"busy\">',\n\t\t\t\t\t\t\t\tparseInt(busy),\n\t\t\t\t\t\t\t'<div>',\n\t\t\t\t\t\t'</div>'].join(''),\n\n        size: new navermaps.Size(48, 48),\n        anchor: new navermaps.Point(11, 35)\n    }\n\t)\n}\n*/\n\nconst CafeMarker = ({lat, lng, busy, busy_color, cafe_name}) => {\n\tlet title, marker_div, franchiseIcon='', iconImgArray, rand_index, busyText='';\n\n\ticonImgArray = [ '<img src=\"/images/marker/HollysCoffee.svg\" class=\"franchise_img\" alt=\"cafe\">', '<img src=\"/images/marker/Starbucks.svg\" class=\"franchise_img\" alt=\"cafe\">', '<img src=\"/images/marker/TomNToms.svg\" class=\"franchise_img\" alt=\"cafe\">'];\n\trand_index = parseInt(busy) % 3 ;\n\tmarker_div = '<div class=\"map_marker_div';\n\tfranchiseIcon =iconImgArray[rand_index];\n\tif (busy_color==='red') {\n\t\ttitle = 'red_marker';\n\t\tmarker_div = marker_div + ' busy_red\">';\n\t\tbusyText = \"많음\";\n\t}\n\telse if (busy_color==='yellow') {\n\t\ttitle = 'yellow_marker';\n\t\tmarker_div = marker_div + ' busy_yellow\">';\n\t\tbusyText = \"보통\";\n\t}\n\telse if (busy_color==='green') {\n\t\ttitle = 'green_marker';\n\t\tmarker_div = marker_div + ' busy_green\">';\n\t\tbusyText = \"적음\";\n\t}\n\n\telse if (busy_color==='grey') {\n\t\ttitle = 'grey_marker';\n\t\tmarker_div = marker_div + ' busy_grey\">';\n\n    }\n    \n    let busyPercent = parseInt(busy);\n    if (busyPercent === -1)\n        busyPercent = null;\n\t\n\treturn (  \n\t\t<Marker\n\t\t\tposition={{ lat: lat, lng: lng }}\n\t\t\ticon={CustomMarker(marker_div, busyPercent, cafe_name, busyText, franchiseIcon)}\n\t\t\ttitle= {title}\n\t\t/>\n\t)\n}\n\n\nCafeMarker.propTypes = {\n\tlat: PropTypes.number.isRequired,\n\tlng: PropTypes.number.isRequired,\n\tbusy: PropTypes.string.isRequired,\n\tbusy_color: PropTypes.string.isRequired,\n\tcafe_name: PropTypes.string.isRequired\n}\n\nexport default CafeMarker;\n"]},"metadata":{},"sourceType":"module"}