{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/cafein_server/client/src/components/Map.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { RenderAfterNavermapsLoaded, NaverMap, Marker } from 'react-naver-maps'; // 패키지 불러오기\n\nfunction CafeMarker({\n  lat,\n  lng\n}) {\n  const navermaps = window.naver.maps;\n  console.log(navermaps);\n  const latlng = new naver.map.LatLng(lat, lng); //const newCoord = fromLatLngToNaver(latlng);\n  //console.log(newCoord);\n\n  return /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: lat,\n      lng: lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }); //position={new navermaps.LatLng(lat, lng) }\n}\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cafes: []\n    };\n\n    this.getCafes = async () => {\n      const cafes = await axios.post(\"/getcafes\");\n      console.log(cafes.data);\n      return cafes.data;\n    };\n\n    console.log(\"BORN NAVER!\");\n  }\n\n  async componentDidMount() {\n    const cafes = await this.getCafes();\n    this.setState(current => ({\n      cafes: cafes\n    }));\n    console.log(\"DID mount!\");\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(RenderAfterNavermapsLoaded, {\n      ncpClientId: 'r7dvstqo0s' // 자신의 네이버 계정에서 발급받은 Client ID\n      ,\n      error: /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }\n      }, \"Maps Load Error\"),\n      loading: /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }\n      }, \"Maps Loading...\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(NaverMap, {\n      mapDivId: 'maps-getting-started-uncontrolled' // default: react-naver-map\n      ,\n      style: {\n        width: '100%',\n        // 네이버지도 가로 길이\n        height: '85vh' // 네이버지도 세로 길이\n\n      },\n      defaultCenter: {\n        lat: 37.554722,\n        lng: 126.970833\n      } // 지도 초기 위치\n      ,\n      defaultZoom: 13 // 지도 초기 확대 배율\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, this.state.cafes.map((cafe, index) => /*#__PURE__*/React.createElement(CafeMarker, {\n      lat: cafe.lat,\n      lng: cafe.lon,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/ec2-user/cafein_server/client/src/components/Map.js"],"names":["React","axios","RenderAfterNavermapsLoaded","NaverMap","Marker","CafeMarker","lat","lng","navermaps","window","naver","maps","console","log","latlng","map","LatLng","Map","Component","constructor","props","state","cafes","getCafes","post","data","componentDidMount","setState","current","componentDidUpdate","render","width","height","cafe","index","lon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,0BAAT,EAAqCC,QAArC,EAA+CC,MAA/C,QAA6D,kBAA7D,C,CAAiF;;AAKjF,SAASC,UAAT,CAAoB;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAApB,EAAgC;AAE5B,QAAMC,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAaC,IAA/B;AACFC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAEA,QAAMM,MAAM,GAAG,IAAIJ,KAAK,CAACK,GAAN,CAAUC,MAAd,CAAqBV,GAArB,EAA0BC,GAA1B,CAAf,CAL8B,CAM9B;AACA;;AAED,sBACC,oBAAC,MAAD;AACC,IAAA,QAAQ,EAAE;AAAED,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,GAAG,EAAEA;AAAjB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAT+B,CAc9B;AACD;;AAID,MAAMU,GAAN,SAAkBjB,KAAK,CAACkB,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEnB,UAAMA,KAAN;AAFmB,SAMpBC,KANoB,GAMZ;AACPC,MAAAA,KAAK,EAAE;AADA,KANY;;AAAA,SAUpBC,QAVoB,GAUT,YAAW;AACrB,YAAMD,KAAK,GAAG,MAAMrB,KAAK,CAACuB,IAAN,CAAW,WAAX,CAApB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACG,IAAlB;AACA,aAAQH,KAAK,CAACG,IAAd;AACA,KAdmB;;AAGnBb,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;;AAYD,QAAMa,iBAAN,GAAyB;AACxB,UAAMJ,KAAK,GAAI,MAAM,KAAKC,QAAL,EAArB;AACA,SAAKI,QAAL,CAAcC,OAAO,KAAK;AACzBN,MAAAA,KAAK,EAAEA;AADkB,KAAL,CAArB;AAGAV,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;;AAEDgB,EAAAA,kBAAkB,GAAE,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AAEP,wBACA,oBAAC,0BAAD;AACC,MAAA,WAAW,EAAE,YADd,CAC4B;AAD5B;AAEC,MAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFR;AAGC,MAAA,OAAO,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOC,oBAAC,QAAD;AACC,MAAA,QAAQ,EAAE,mCADX,CACgD;AADhD;AAEC,MAAA,KAAK,EAAE;AACNC,QAAAA,KAAK,EAAE,MADD;AACS;AACfC,QAAAA,MAAM,EAAE,MAFF,CAES;;AAFT,OAFR;AAMC,MAAA,aAAa,EAAE;AAAE1B,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE;AAAvB,OANhB,CAMqD;AANrD;AAOC,MAAA,WAAW,EAAE,EAPd,CAOkB;AAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,KAAKc,KAAL,CAAWC,KAAX,CAAiBP,GAAjB,CAAqB,CAACkB,IAAD,EAAOC,KAAP,kBACrB,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAED,IAAI,CAAC3B,GAAtB;AAA2B,MAAA,GAAG,EAAE2B,IAAI,CAACE,GAArC;AAA0C,MAAA,GAAG,EAAED,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAVF,CAPD,CADA;AA0BD;;AA1DgC;;AA6DlC,eAAejB,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { RenderAfterNavermapsLoaded, NaverMap, Marker } from 'react-naver-maps'; // 패키지 불러오기\n\n\n\n\nfunction CafeMarker({lat, lng}) {\n\n    const navermaps = window.naver.maps;\n\t\tconsole.log(navermaps);\n\n\t\tconst latlng = new naver.map.LatLng(lat, lng);\n\t\t//const newCoord = fromLatLngToNaver(latlng);\n\t\t//console.log(newCoord);\n\n\treturn (  \n\t\t<Marker\n\t\t\tposition={{ lat: lat, lng: lng }}\n\t\t/>\n\t)\n\t\t//position={new navermaps.LatLng(lat, lng) }\n}\n\n\n\nclass Map extends React.Component {\n\n  constructor(props) {\n\n\t\tsuper(props);\n\t\tconsole.log(\"BORN NAVER!\")\n\t}\n\n\tstate = {\n\t\tcafes: []\n\t};\n\n\tgetCafes = async() => {\n\t\tconst cafes = await axios.post(\"/getcafes\");\n\t\tconsole.log(cafes.data);\n\t\treturn (cafes.data);\n\t}\n\n\tasync\tcomponentDidMount(){\n\t\tconst cafes =  await this.getCafes()\n\t\tthis.setState(current => ({\n\t\t\tcafes: cafes\n\t\t}));\n\t\tconsole.log(\"DID mount!\");\n\t}\n\n\tcomponentDidUpdate(){\n\n\t}\n\t\n\trender() {\n\n  \treturn (\n\t\t\t<RenderAfterNavermapsLoaded\n\t\t\t\tncpClientId={'r7dvstqo0s'} // 자신의 네이버 계정에서 발급받은 Client ID\n\t\t\t\terror={<p>Maps Load Error</p>}\n\t\t\t\tloading={<p>Maps Loading...</p>}\n\t\t\t>\n\n\n\t\t\t\t<NaverMap\n\t\t\t\t\tmapDivId={'maps-getting-started-uncontrolled'} // default: react-naver-map\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%', // 네이버지도 가로 길이\n\t\t\t\t\t\theight: '85vh' // 네이버지도 세로 길이\n\t\t\t\t\t}}\n\t\t\t\t\tdefaultCenter={{ lat: 37.554722, lng: 126.970833 }} // 지도 초기 위치\n\t\t\t\t\tdefaultZoom={13} // 지도 초기 확대 배율\n\t\t\t\t>\n\t\t\t\n\t\t\t\t\t{this.state.cafes.map((cafe, index) => (\n\t\t\t\t\t\t<CafeMarker lat={cafe.lat} lng={cafe.lon} key={index}/>\n\t\t\t\t\t))}\n\n\n\t\t\t\t</NaverMap>\n\t\t\t</RenderAfterNavermapsLoaded>\n\t\t);\n\t}\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}