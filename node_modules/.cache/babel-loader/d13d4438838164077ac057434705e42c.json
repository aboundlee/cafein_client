{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\cafeproject\\\\cafein_client\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Map from './Map';\nimport { RenderAfterNavermapsLoaded } from 'react-naver-maps'; // 패키지 불러오기\n\nimport { getCurrentLocation } from '../utils/utils';\nimport dotenv from 'dotenv';\nimport Search from './Search';\nimport { useQuery } from \"react-apollo-hooks\";\nimport { gql } from \"apollo-boost\"; //dotenv.config({ path: path.join(__dirname,'/.env') });\n\ndotenv.config();\nconst GET_MARKER_STATUS = gql`\n    query getMarkerStatus {\n        getMarkerStatus @client \n    }\n`;\n\nconst App = () => {\n  //console.log('i am rendering');\n  const [buttonListener, setButtonListener] = useState(0);\n  const {\n    data,\n    refetch,\n    loading,\n    error\n  } = useQuery(GET_MARKER_STATUS);\n  let markerStatus;\n  const [show, setShow] = useState(false);\n  const [selectedStore, setSelectedStore] = useState({});\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const onCafeClick = store => {\n    handleShow();\n    setSelectedCafe(store);\n  };\n\n  useEffect(() => {\n    refetch();\n  }, [buttonListener]);\n\n  if (loading) {\n    console.log(loading);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }\n    }, \"loading..\");\n  }\n\n  if (data) {\n    markerStatus = data.getMarkerStatus;\n  }\n\n  return /*#__PURE__*/React.createElement(RenderAfterNavermapsLoaded // ncpClientId={process.env.REACT_APP_NAVERMAP_CLIENT_KEY} // 자신의 네이버 계정에서 발급받은 Client ID\n  , {\n    ncpClientId: \"xh3x53ga8k\" // 자신의 네이버 계정에서 발급받은 Client ID\n    ,\n    error: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }\n    }, \"Maps Load Error\"),\n    loading: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    }, \"Maps Loading...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu_div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/ui/menu/hamburger.svg\",\n    className: \"menu_hamburger\",\n    alt: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/ui/menu/activate.svg\",\n    className: \"menu_activate\",\n    alt: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    markerStatus: markerStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    setButtonListener: setButtonListener,\n    onCafeClick: onCafeClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["E:/project/cafeproject/cafein_client/src/components/App.js"],"names":["React","useState","useEffect","Map","RenderAfterNavermapsLoaded","getCurrentLocation","dotenv","Search","useQuery","gql","config","GET_MARKER_STATUS","App","buttonListener","setButtonListener","data","refetch","loading","error","markerStatus","show","setShow","selectedStore","setSelectedStore","handleShow","handleClose","onCafeClick","store","setSelectedCafe","console","log","getMarkerStatus"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport '../App.css';\r\nimport Map from './Map'; \r\nimport { RenderAfterNavermapsLoaded} from 'react-naver-maps'; // 패키지 불러오기\r\nimport { getCurrentLocation } from '../utils/utils';\r\nimport dotenv from 'dotenv';\r\n\r\nimport Search from './Search';\r\n\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\n\r\n//dotenv.config({ path: path.join(__dirname,'/.env') });\r\ndotenv.config();\r\n\r\n\r\nconst GET_MARKER_STATUS = gql`\r\n    query getMarkerStatus {\r\n        getMarkerStatus @client \r\n    }\r\n`;\r\n\r\n\r\nconst App = () => {\r\n\r\n\t\r\n\t\t//console.log('i am rendering');\r\n        const [buttonListener, setButtonListener] = useState(0);\r\n\r\n        const {data, refetch, loading, error} = useQuery(GET_MARKER_STATUS);\r\n        let markerStatus; \r\n\r\n\t\tconst [show, setShow] = useState(false);\r\n\t\tconst [selectedStore, setSelectedStore] = useState({});\r\n\t\tconst handleShow = () => setShow(true);\r\n\t\tconst handleClose = () => setShow(false);\r\n\t\tconst onCafeClick = (store) => {\r\n\t\t\thandleShow();\r\n\t\t\tsetSelectedCafe(store);\r\n\t\t};\r\n\r\n\r\n        useEffect(() => {\r\n            refetch();\r\n        },[buttonListener]);\r\n    \r\n\t\t\t\tif (loading) {\r\n\t\t\t\t\tconsole.log(loading);\r\n\t\t\t\t\treturn (<p>loading..</p>);\r\n\t\t\t\t}\r\n\r\n        if (data) {\r\n            markerStatus = data.getMarkerStatus;\r\n        }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<RenderAfterNavermapsLoaded\r\n\t\t\t\t// ncpClientId={process.env.REACT_APP_NAVERMAP_CLIENT_KEY} // 자신의 네이버 계정에서 발급받은 Client ID\r\n\t\t\t\tncpClientId={\"xh3x53ga8k\"} // 자신의 네이버 계정에서 발급받은 Client ID\r\n\t\t\t\terror={<p>Maps Load Error</p>}\r\n\t\t\t\tloading={<p>Maps Loading...</p>}\r\n\t\t\t>\r\n\t\t\t\t<div id=\"container\">\r\n\t\t\t\t\t<div className=\"menu_div\">\r\n\t\t\t\t\t\t<img src=\"/images/ui/menu/hamburger.svg\" className=\"menu_hamburger\" alt=\"menu\"></img>\r\n\t\t\t\t\t\t<img src=\"/images/ui/menu/activate.svg\" className=\"menu_activate\" alt=\"menu\"></img>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Map markerStatus={markerStatus}/>\r\n\t\t\t\t\r\n                <Search setButtonListener={setButtonListener} onCafeClick={onCafeClick}/>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</RenderAfterNavermapsLoaded>\r\n\t\t);\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}