{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/cafein_server/client/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Map from './Map';\nimport { RenderAfterNavermapsLoaded } from 'react-naver-maps'; // 패키지 불러오기\n\nimport { getCurrentLocation } from '../utils/utils';\nimport path from 'path';\nimport dotenv from 'dotenv';\nimport Search from './Search';\nimport { useQuery } from \"react-apollo-hooks\";\nimport { gql } from \"apollo-boost\"; //dotenv.config({ path: path.join(__dirname,'/.env') });\n\ndotenv.config();\nconst GET_MARKER_STATUS = gql`\n    query getMarkerStatus {\n        getMarkerStatus @client \n    }\n`;\n\nconst App = () => {\n  //console.log('i am rendering');\n  const [markerStatus, setMarkerStatus] = useState(\"text\");\n  useEffect(() => {\n    const {\n      data: markerStatusQuery\n    } = useQuery(GET_MARKER_STATUS);\n    console.log(markerStatusQuery);\n\n    if (markerStatusQuery) {\n      let markerStatus2 = markerStatusQuery.getMarkerStatus;\n      console.log(markerStatus2);\n    }\n\n    console.log('button-Clicked');\n  }, [markerStatus]);\n  return /*#__PURE__*/React.createElement(RenderAfterNavermapsLoaded, {\n    ncpClientId: process.env.REACT_APP_NAVERMAP_CLIENT_KEY // 자신의 네이버 계정에서 발급받은 Client ID\n    ,\n    error: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }, \"Maps Load Error\"),\n    loading: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }\n    }, \"Maps Loading...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu_div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/ui/menu/hamburger.svg\",\n    className: \"menu_hamburger\",\n    alt: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/ui/menu/activate.svg\",\n    className: \"menu_activate\",\n    alt: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    setMarkerStatus: setMarkerStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n};\n/*\n<div className=\"filter_group\">\n\t\n\t<div className=\"filter_div\">\n\t\t<img src=\"/images/ui/s1_b.svg\" alt=\"green\"></img>\n\t\t<p>10명 규모</p>\n\t</div>\n\t<div className=\"filter_div\">\n\t\t<img src=\"/images/ui/s2_b.svg\" alt=\"green\"></img>\n\t\t<p>10 - 20명 규모</p>\n\t</div>\n\t<div className=\"filter_div\">\n\t\t<img src=\"/images/ui/s3_b.svg\" alt=\"green\"></img>\n\t\t\t<p>30명 이상</p>\n\t</div>\n\n</div>\n<div className=\"filter_instruction_div\">\n\t<p >원하시는 카페 규모를 선택해주세요</p>\n</div>\n*/\n\n/*\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Router path=\"/index\"/>\n\t\t\t\t\t<Router path=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n*/\n\n/*\n<div>\n\t{isLoading ? \"Loading\" : \"Done\"}\n\t<h1>{this.state.count}</h1>\n</div>\n<ul>\n\t<li onClick={this.add}>Cafe List</li>\n\t<li onClick={this.minus}>Cafe Find</li>\n</ul>\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/home/ec2-user/cafein_server/client/src/components/App.js"],"names":["React","useState","useEffect","Map","RenderAfterNavermapsLoaded","getCurrentLocation","path","dotenv","Search","useQuery","gql","config","GET_MARKER_STATUS","App","markerStatus","setMarkerStatus","data","markerStatusQuery","console","log","markerStatus2","getMarkerStatus","process","env","REACT_APP_NAVERMAP_CLIENT_KEY"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,0BAAT,QAA0C,kBAA1C,C,CAA8D;;AAC9D,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB,C,CAGA;;AACAH,MAAM,CAACI,MAAP;AAGA,MAAMC,iBAAiB,GAAGF,GAAI;;;;CAA9B;;AAOA,MAAMG,GAAG,GAAG,MAAM;AAGhB;AACM,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,MAAD,CAAhD;AAMAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACc,MAAAA,IAAI,EAAEC;AAAP,QAA4BR,QAAQ,CAACG,iBAAD,CAA1C;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;;AACA,QAAIA,iBAAJ,EAAuB;AACnB,UAAIG,aAAa,GAAGH,iBAAiB,CAACI,eAAtC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AACH;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GARQ,EAQP,CAACL,YAAD,CARO,CAAT;AAUN,sBACC,oBAAC,0BAAD;AACC,IAAA,WAAW,EAAEQ,OAAO,CAACC,GAAR,CAAYC,6BAD1B,CACyD;AADzD;AAEC,IAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFR;AAGC,IAAA,OAAO,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,GAAG,EAAC,+BAAT;AAAyC,IAAA,SAAS,EAAC,gBAAnD;AAAoE,IAAA,GAAG,EAAC,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAK,IAAA,GAAG,EAAC,8BAAT;AAAwC,IAAA,SAAS,EAAC,eAAlD;AAAkE,IAAA,GAAG,EAAC,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,eAMA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAQY,oBAAC,MAAD;AAAQ,IAAA,eAAe,EAAET,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARZ,CALD,CADD;AAoBD,CAxCD;AA0CM;;;;;;;;;;;;;;;;;;;;;;AAuBN;;;;;;;;;AAQM;;;;;;;;;;;;AAUN,eAAeF,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../App.css';\nimport Map from './Map'; \nimport { RenderAfterNavermapsLoaded} from 'react-naver-maps'; // 패키지 불러오기\nimport { getCurrentLocation } from '../utils/utils';\n\nimport path from 'path';\nimport dotenv from 'dotenv';\n\nimport Search from './Search';\n\nimport { useQuery } from \"react-apollo-hooks\";\nimport { gql } from \"apollo-boost\";\n\n\n//dotenv.config({ path: path.join(__dirname,'/.env') });\ndotenv.config();\n\n\nconst GET_MARKER_STATUS = gql`\n    query getMarkerStatus {\n        getMarkerStatus @client \n    }\n`;\n\n\nconst App = () => {\n\n\t\n\t\t//console.log('i am rendering');\n        const [markerStatus, setMarkerStatus] = useState(\"text\");\n\n    \n\n \n\n        useEffect(() => {\n            const {data: markerStatusQuery} = useQuery(GET_MARKER_STATUS);\n            console.log(markerStatusQuery);\n            if (markerStatusQuery) {\n                let markerStatus2 = markerStatusQuery.getMarkerStatus;\n                console.log(markerStatus2);\n            }\n            console.log('button-Clicked');\n        },[markerStatus]);\n\n\t\treturn (\n\t\t\t<RenderAfterNavermapsLoaded\n\t\t\t\tncpClientId={process.env.REACT_APP_NAVERMAP_CLIENT_KEY} // 자신의 네이버 계정에서 발급받은 Client ID\n\t\t\t\terror={<p>Maps Load Error</p>}\n\t\t\t\tloading={<p>Maps Loading...</p>}\n\t\t\t>\n\t\t\t\t<div id=\"container\">\n\t\t\t\t\t<div className=\"menu_div\">\n\t\t\t\t\t\t<img src=\"/images/ui/menu/hamburger.svg\" className=\"menu_hamburger\" alt=\"menu\"></img>\n\t\t\t\t\t\t<img src=\"/images/ui/menu/activate.svg\" className=\"menu_activate\" alt=\"menu\"></img>\n\t\t\t\t</div>\n\n\t\t\t\t<Map />\n\t\t\t\t\n                <Search setMarkerStatus={setMarkerStatus}/>\n\n\t\t\t\t</div>\n\t\t\t</RenderAfterNavermapsLoaded>\n\t\t);\n\n}\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t<div className=\"filter_group\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"filter_div\">\n\t\t\t\t\t\t\t\t<img src=\"/images/ui/s1_b.svg\" alt=\"green\"></img>\n\t\t\t\t\t\t\t\t<p>10명 규모</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"filter_div\">\n\t\t\t\t\t\t\t\t<img src=\"/images/ui/s2_b.svg\" alt=\"green\"></img>\n\t\t\t\t\t\t\t\t<p>10 - 20명 규모</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"filter_div\">\n\t\t\t\t\t\t\t\t<img src=\"/images/ui/s3_b.svg\" alt=\"green\"></img>\n\t\t\t\t\t\t\t\t\t<p>30명 이상</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"filter_instruction_div\">\n\t\t\t\t\t\t\t<p >원하시는 카페 규모를 선택해주세요</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t*/\n\n/*\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Router path=\"/index\"/>\n\t\t\t\t\t<Router path=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n*/\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{isLoading ? \"Loading\" : \"Done\"}\n\t\t\t\t\t\t\t<h1>{this.state.count}</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li onClick={this.add}>Cafe List</li>\n\t\t\t\t\t\t\t<li onClick={this.minus}>Cafe Find</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}