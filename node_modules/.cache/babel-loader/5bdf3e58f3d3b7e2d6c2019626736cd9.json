{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/cafein_server/client/src/components/Map.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { NaverMap } from 'react-naver-maps'; // 패키지 불러오기\n\nimport CafeMarker from './Cafemarker';\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cafes: [],\n      isLoading: true\n    };\n\n    this.getCafes = async () => {\n      const {\n        data\n      } = await axios.post(\"/getcafes\");\n      this.setState(current => ({\n        cafes: data,\n        isLoading: false\n      }));\n    };\n\n    console.log(\"BORN NAVER!\");\n  }\n\n  async componentDidMount() {\n    await this.getCafes();\n    console.log(\"DID mount!\");\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    //const navermaps = window.naver.maps; // 혹은 withNavermaps hoc을 사용\n    //const latlng = new navermaps.LatLng(37.3595704, 127.105399)\n    const {\n      isLoading,\n      cafes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(NaverMap, {\n      mapDivId: 'maps-getting-started-uncontrolled' // default: react-naver-map\n      ,\n      style: {\n        width: '100%',\n        // 네이버지도 가로 길이\n        height: '85vh' // 네이버지도 세로 길이\n\n      },\n      defaultCenter: {\n        lat: 37.554722,\n        lng: 126.970833\n      } // 지도 초기 위치\n      ,\n      defaultZoom: 13 // 지도 초기 확대 배율\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, cafes.map((cafe, index) => /*#__PURE__*/React.createElement(CafeMarker, {\n      lat: cafe.lat,\n      lng: cafe.lon,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }) //<CafeMarker lat={cafe.lat} lng={cafe.lon} />\n    ));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/ec2-user/cafein_server/client/src/components/Map.js"],"names":["React","axios","NaverMap","CafeMarker","Map","Component","constructor","props","state","cafes","isLoading","getCafes","data","post","setState","current","console","log","componentDidMount","componentDidUpdate","render","width","height","lat","lng","map","cafe","index","lon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAA6C;;AAC7C,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEnB,UAAMA,KAAN;AAFmB,SAMpBC,KANoB,GAMZ;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KANY;;AAAA,SAWpBC,QAXoB,GAWT,YAAW;AACrB,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAMX,KAAK,CAACY,IAAN,CAAW,WAAX,CAArB;AACA,WAAKC,QAAL,CAAcC,OAAO,KAAK;AACzBN,QAAAA,KAAK,EAAEG,IADkB;AAEzBF,QAAAA,SAAS,EAAE;AAFc,OAAL,CAArB;AAIA,KAjBmB;;AAGnBM,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;;AAeD,QAAMC,iBAAN,GAAyB;AACxB,UAAM,KAAKP,QAAL,EAAN;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;;AAEDE,EAAAA,kBAAkB,GAAE,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACC;AAGF,UAAM;AAACV,MAAAA,SAAD;AAAYD,MAAAA;AAAZ,QAAqB,KAAKD,KAAhC;AAEC,wBAGC,oBAAC,QAAD;AACC,MAAA,QAAQ,EAAE,mCADX,CACgD;AADhD;AAEC,MAAA,KAAK,EAAE;AACNa,QAAAA,KAAK,EAAE,MADD;AACS;AACfC,QAAAA,MAAM,EAAE,MAFF,CAES;;AAFT,OAFR;AAMC,MAAA,aAAa,EAAE;AAAEC,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE;AAAvB,OANhB,CAMqD;AANrD;AAOC,MAAA,WAAW,EAAE,EAPd,CAOkB;AAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUGf,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACX,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAED,IAAI,CAACH,GAAtB;AAA2B,MAAA,GAAG,EAAEG,IAAI,CAACE,GAArC;AAA0C,MAAA,GAAG,EAAED,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,CAEX;AAFC,KAVH,CAHD;AAqBD;;AA1DgC;;AA6DlC,eAAevB,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { NaverMap } from 'react-naver-maps'; // 패키지 불러오기\nimport CafeMarker from './Cafemarker';\n\nclass Map extends React.Component {\n\n  constructor(props) {\n\n\t\tsuper(props);\n\t\tconsole.log(\"BORN NAVER!\")\n\t}\n\n\tstate = {\n\t\tcafes: [],\n\t\tisLoading: true\n\t};\n\n\tgetCafes = async() => {\n\t\tconst {data} = await axios.post(\"/getcafes\");\n\t\tthis.setState(current => ({\n\t\t\tcafes: data, \n\t\t\tisLoading: false\n\t\t}));\n\t}\n\n\tasync\tcomponentDidMount(){\n\t\tawait this.getCafes()\n\t\tconsole.log(\"DID mount!\");\n\t}\n\n\tcomponentDidUpdate(){\n\n\t}\n\t\n\trender() {\n  \t//const navermaps = window.naver.maps; // 혹은 withNavermaps hoc을 사용\n   \t//const latlng = new navermaps.LatLng(37.3595704, 127.105399)\n\n\n\t\tconst {isLoading, cafes} = this.state;\n\n  \treturn (\n\n\n\t\t\t\t<NaverMap\n\t\t\t\t\tmapDivId={'maps-getting-started-uncontrolled'} // default: react-naver-map\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%', // 네이버지도 가로 길이\n\t\t\t\t\t\theight: '85vh' // 네이버지도 세로 길이\n\t\t\t\t\t}}\n\t\t\t\t\tdefaultCenter={{ lat: 37.554722, lng: 126.970833 }} // 지도 초기 위치\n\t\t\t\t\tdefaultZoom={13} // 지도 초기 확대 배율\n\t\t\t\t>\n\t\t\t\n\t\t\t\t\t{ cafes.map((cafe, index) => (\n\t\t\t\t\t\t<CafeMarker lat={cafe.lat} lng={cafe.lon} key={index}/>\n\t\t\t\t\t\t//<CafeMarker lat={cafe.lat} lng={cafe.lon} />\n\t\t\t\t\t))}\n\n\n\t\t\t\t</NaverMap>\n\t\t);\n\t}\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}