{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/cafein_server/client/src/components/Cafemarker.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Marker } from 'react-naver-maps'; // 패키지 불러오기\n\nimport './marker.css';\n\nconst CustomMarker = (marker_div, busy, name) => {\n  const navermaps = window.naver.maps;\n  return {\n    content: [marker_div, '<div class=\"icon_div\">', '<img src=\"/images/ui/s1_m.svg\" alt=\"cafe\">', '</div>', '<div class=\"busy\">', parseInt(busy), name, '<div>', '</div>'].join(''),\n    size: new navermaps.Size(48, 48),\n    anchor: new navermaps.Point(11, 35)\n  };\n};\n\nconst CafeMarker = ({\n  lat,\n  lng,\n  busy,\n  busy_color,\n  cafe_name\n}) => {\n  let title, marker_div;\n  marker_div = '<div class=\"map_marker_div';\n\n  if (busy_color === 'red') {\n    title = 'red_marker';\n    marker_div = marker_div + ' busy_red\">';\n  } else if (busy_color === 'yellow') {\n    title = 'yellow_marker';\n    marker_div = marker_div + ' busy_yellow\">';\n  } else if (busy_color === 'green') {\n    title = 'green_marker';\n    marker_div = marker_div + ' busy_green\">';\n  } else if (busy_color === 'grey') {\n    title = 'grey_marker';\n    marker_div = marker_div + ' busy_grey\">';\n  }\n\n  return /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: lat,\n      lng: lng\n    },\n    icon: CustomMarker(marker_div, busy, cafe_name),\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  });\n};\n\nCafeMarker.propTypes = {\n  lat: PropTypes.number.isRequired,\n  lng: PropTypes.number.isRequired,\n  busy: PropTypes.string.isRequired,\n  busy_color: PropTypes.string.isRequired,\n  cafe_name: PropTypes.string.isRequired\n};\nexport default CafeMarker;","map":{"version":3,"sources":["/home/ec2-user/cafein_server/client/src/components/Cafemarker.js"],"names":["React","PropTypes","Marker","CustomMarker","marker_div","busy","name","navermaps","window","naver","maps","content","parseInt","join","size","Size","anchor","Point","CafeMarker","lat","lng","busy_color","cafe_name","title","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,kBAAvB,C,CAA2C;;AAC3C,OAAO,cAAP;;AAGA,MAAMC,YAAY,GAAG,CAACC,UAAD,EAAYC,IAAZ,EAAkBC,IAAlB,KAA2B;AAC/C,QAAMC,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAaC,IAA/B;AAEA,SACC;AACMC,IAAAA,OAAO,EAAC,CACVP,UADU,EAER,wBAFQ,EAGR,4CAHQ,EAIT,QAJS,EAKT,oBALS,EAMRQ,QAAQ,CAACP,IAAD,CANA,EAORC,IAPQ,EAQT,OARS,EASV,QATU,EASAO,IATA,CASK,EATL,CADd;AAYMC,IAAAA,IAAI,EAAE,IAAIP,SAAS,CAACQ,IAAd,CAAmB,EAAnB,EAAuB,EAAvB,CAZZ;AAaMC,IAAAA,MAAM,EAAE,IAAIT,SAAS,CAACU,KAAd,CAAoB,EAApB,EAAwB,EAAxB;AAbd,GADD;AAiBA,CApBD;;AAsBA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,GAAN;AAAWf,EAAAA,IAAX;AAAiBgB,EAAAA,UAAjB;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AAC/D,MAAIC,KAAJ,EAAWnB,UAAX;AACAA,EAAAA,UAAU,GAAG,4BAAb;;AACA,MAAIiB,UAAU,KAAG,KAAjB,EAAwB;AACvBE,IAAAA,KAAK,GAAG,YAAR;AACAnB,IAAAA,UAAU,GAAGA,UAAU,GAAG,aAA1B;AACA,GAHD,MAIK,IAAIiB,UAAU,KAAG,QAAjB,EAA2B;AAC/BE,IAAAA,KAAK,GAAG,eAAR;AACAnB,IAAAA,UAAU,GAAGA,UAAU,GAAG,gBAA1B;AACA,GAHI,MAIA,IAAIiB,UAAU,KAAG,OAAjB,EAA0B;AAC9BE,IAAAA,KAAK,GAAG,cAAR;AACAnB,IAAAA,UAAU,GAAGA,UAAU,GAAG,eAA1B;AACA,GAHI,MAKA,IAAIiB,UAAU,KAAG,MAAjB,EAAyB;AAC7BE,IAAAA,KAAK,GAAG,aAAR;AACAnB,IAAAA,UAAU,GAAGA,UAAU,GAAG,cAA1B;AACA;;AACD,sBACC,oBAAC,MAAD;AACC,IAAA,QAAQ,EAAE;AAAEe,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,GAAG,EAAEA;AAAjB,KADX;AAEC,IAAA,IAAI,EAAEjB,YAAY,CAACC,UAAD,EAAaC,IAAb,EAAmBiB,SAAnB,CAFnB;AAGC,IAAA,KAAK,EAAGC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAOA,CA3BD;;AA8BAL,UAAU,CAACM,SAAX,GAAuB;AACtBL,EAAAA,GAAG,EAAElB,SAAS,CAACwB,MAAV,CAAiBC,UADA;AAEtBN,EAAAA,GAAG,EAAEnB,SAAS,CAACwB,MAAV,CAAiBC,UAFA;AAGtBrB,EAAAA,IAAI,EAAEJ,SAAS,CAAC0B,MAAV,CAAiBD,UAHD;AAItBL,EAAAA,UAAU,EAAEpB,SAAS,CAAC0B,MAAV,CAAiBD,UAJP;AAKtBJ,EAAAA,SAAS,EAAErB,SAAS,CAAC0B,MAAV,CAAiBD;AALN,CAAvB;AAQA,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Marker } from 'react-naver-maps'; // 패키지 불러오기\nimport './marker.css';\n\n\nconst CustomMarker = (marker_div,busy, name) => {\n\tconst navermaps = window.naver.maps;\n\n\treturn (\n\t\t{\n        content:[ \n\t\t\t\t\t\tmarker_div,\n\t\t\t\t\t \t\t'<div class=\"icon_div\">',\n\t\t\t\t\t\t\t\t'<img src=\"/images/ui/s1_m.svg\" alt=\"cafe\">',\n\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t'<div class=\"busy\">',\n\t\t\t\t\t\t\t\tparseInt(busy),\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t'<div>',\n\t\t\t\t\t\t'</div>'].join(''),\n\n        size: new navermaps.Size(48, 48),\n        anchor: new navermaps.Point(11, 35)\n    }\n\t)\n}\n\nconst CafeMarker = ({lat, lng, busy, busy_color, cafe_name}) => {\n\tlet title, marker_div;\n\tmarker_div = '<div class=\"map_marker_div';\n\tif (busy_color==='red') {\n\t\ttitle = 'red_marker';\n\t\tmarker_div = marker_div + ' busy_red\">';\n\t}\n\telse if (busy_color==='yellow') {\n\t\ttitle = 'yellow_marker';\n\t\tmarker_div = marker_div + ' busy_yellow\">';\n\t}\n\telse if (busy_color==='green') {\n\t\ttitle = 'green_marker';\n\t\tmarker_div = marker_div + ' busy_green\">';\n\t}\n\n\telse if (busy_color==='grey') {\n\t\ttitle = 'grey_marker';\n\t\tmarker_div = marker_div + ' busy_grey\">';\n\t}\n\treturn (  \n\t\t<Marker\n\t\t\tposition={{ lat: lat, lng: lng }}\n\t\t\ticon={CustomMarker(marker_div, busy, cafe_name)}\n\t\t\ttitle= {title}\n\t\t/>\n\t)\n}\n\n\nCafeMarker.propTypes = {\n\tlat: PropTypes.number.isRequired,\n\tlng: PropTypes.number.isRequired,\n\tbusy: PropTypes.string.isRequired,\n\tbusy_color: PropTypes.string.isRequired,\n\tcafe_name: PropTypes.string.isRequired\n}\n\nexport default CafeMarker;\n"]},"metadata":{},"sourceType":"module"}