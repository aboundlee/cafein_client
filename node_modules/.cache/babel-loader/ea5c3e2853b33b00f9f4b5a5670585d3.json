{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/cafein_server/client/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Map from './Map';\nimport { RenderAfterNavermapsLoaded } from 'react-naver-maps'; // 패키지 불러오기\n\nimport { getCurrentLocation } from '../utils/utils';\nimport path from 'path';\nimport dotenv from 'dotenv';\nimport Search from './Search';\nimport { useQuery } from \"react-apollo-hooks\";\nimport { gql } from \"apollo-boost\"; //dotenv.config({ path: path.join(__dirname,'/.env') });\n\ndotenv.config();\nconst GET_MARKER_STATUS = gql`\n    query getMarkerStatus {\n        getMarkerStatus @client \n    }\n`;\n\nconst App = () => {\n  //console.log('i am rendering');\n  const [markerStatus, setMarkerStatus] = useState(\"text\");\n  const {\n    data,\n    refetch,\n    loading,\n    error\n  } = useQuery(GET_MARKER_STATUS);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"Loading..\");\n  }\n\n  console.log(data);\n\n  if (data) {\n    let markerStatus2 = data.getMarkerStatus;\n    console.log(markerStatus2);\n  }\n\n  useEffect(() => {\n    console.log('button-Clicked');\n    refetch();\n  }, [markerStatus]);\n  return /*#__PURE__*/React.createElement(RenderAfterNavermapsLoaded, {\n    ncpClientId: process.env.REACT_APP_NAVERMAP_CLIENT_KEY // 자신의 네이버 계정에서 발급받은 Client ID\n    ,\n    error: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, \"Maps Load Error\"),\n    loading: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }\n    }, \"Maps Loading...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu_div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/ui/menu/hamburger.svg\",\n    className: \"menu_hamburger\",\n    alt: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/ui/menu/activate.svg\",\n    className: \"menu_activate\",\n    alt: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    markerStatus: markerStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    setMarkerStatus: setMarkerStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ec2-user/cafein_server/client/src/components/App.js"],"names":["React","useState","useEffect","Map","RenderAfterNavermapsLoaded","getCurrentLocation","path","dotenv","Search","useQuery","gql","config","GET_MARKER_STATUS","App","markerStatus","setMarkerStatus","data","refetch","loading","error","console","log","markerStatus2","getMarkerStatus","process","env","REACT_APP_NAVERMAP_CLIENT_KEY"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,0BAAT,QAA0C,kBAA1C,C,CAA8D;;AAC9D,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB,C,CAGA;;AACAH,MAAM,CAACI,MAAP;AAGA,MAAMC,iBAAiB,GAAGF,GAAI;;;;CAA9B;;AAOA,MAAMG,GAAG,GAAG,MAAM;AAGhB;AACM,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,MAAD,CAAhD;AAEA,QAAM;AAACe,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAkCV,QAAQ,CAACG,iBAAD,CAAhD;;AAEA,MAAIM,OAAJ,EAAY;AACR,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR;AACH;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,MAAIA,IAAJ,EAAU;AACN,QAAIM,aAAa,GAAGN,IAAI,CAACO,eAAzB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AACH;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAJ,IAAAA,OAAO;AACV,GAHQ,EAGP,CAACH,YAAD,CAHO,CAAT;AAKN,sBACC,oBAAC,0BAAD;AACC,IAAA,WAAW,EAAEU,OAAO,CAACC,GAAR,CAAYC,6BAD1B,CACyD;AADzD;AAEC,IAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFR;AAGC,IAAA,OAAO,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,GAAG,EAAC,+BAAT;AAAyC,IAAA,SAAS,EAAC,gBAAnD;AAAoE,IAAA,GAAG,EAAC,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAK,IAAA,GAAG,EAAC,8BAAT;AAAwC,IAAA,SAAS,EAAC,eAAlD;AAAkE,IAAA,GAAG,EAAC,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,eAMA,oBAAC,GAAD;AAAK,IAAA,YAAY,EAAEZ,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAQY,oBAAC,MAAD;AAAQ,IAAA,eAAe,EAAEC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARZ,CALD,CADD;AAoBD,CA3CD;;AA6CA,eAAeF,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../App.css';\nimport Map from './Map'; \nimport { RenderAfterNavermapsLoaded} from 'react-naver-maps'; // 패키지 불러오기\nimport { getCurrentLocation } from '../utils/utils';\n\nimport path from 'path';\nimport dotenv from 'dotenv';\n\nimport Search from './Search';\n\nimport { useQuery } from \"react-apollo-hooks\";\nimport { gql } from \"apollo-boost\";\n\n\n//dotenv.config({ path: path.join(__dirname,'/.env') });\ndotenv.config();\n\n\nconst GET_MARKER_STATUS = gql`\n    query getMarkerStatus {\n        getMarkerStatus @client \n    }\n`;\n\n\nconst App = () => {\n\n\t\n\t\t//console.log('i am rendering');\n        const [markerStatus, setMarkerStatus] = useState(\"text\");\n\n        const {data, refetch, loading, error} = useQuery(GET_MARKER_STATUS);\n    \n        if (loading){\n            return (<p>Loading..</p>);\n        }\n\n        console.log(data);\n        if (data) {\n            let markerStatus2 = data.getMarkerStatus;\n            console.log(markerStatus2);\n        }\n\n        useEffect(() => {\n            console.log('button-Clicked');\n            refetch();\n        },[markerStatus]);\n\n\t\treturn (\n\t\t\t<RenderAfterNavermapsLoaded\n\t\t\t\tncpClientId={process.env.REACT_APP_NAVERMAP_CLIENT_KEY} // 자신의 네이버 계정에서 발급받은 Client ID\n\t\t\t\terror={<p>Maps Load Error</p>}\n\t\t\t\tloading={<p>Maps Loading...</p>}\n\t\t\t>\n\t\t\t\t<div id=\"container\">\n\t\t\t\t\t<div className=\"menu_div\">\n\t\t\t\t\t\t<img src=\"/images/ui/menu/hamburger.svg\" className=\"menu_hamburger\" alt=\"menu\"></img>\n\t\t\t\t\t\t<img src=\"/images/ui/menu/activate.svg\" className=\"menu_activate\" alt=\"menu\"></img>\n\t\t\t\t</div>\n\n\t\t\t\t<Map markerStatus={markerStatus}/>\n\t\t\t\t\n                <Search setMarkerStatus={setMarkerStatus}/>\n\n\t\t\t\t</div>\n\t\t\t</RenderAfterNavermapsLoaded>\n\t\t);\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}