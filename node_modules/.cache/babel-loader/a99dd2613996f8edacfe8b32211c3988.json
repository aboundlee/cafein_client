{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\cafeproject\\\\cafein_client\\\\src\\\\components\\\\Cafemarker.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Marker } from 'react-naver-maps'; // 패키지 불러오기\n\nimport './marker.css';\n\nconst CustomMarker = (marker_div, busyPercent, name, busyText, franchiseIcon, markerStatus) => {\n  const navermaps = window.naver.maps;\n  let percent = '<span class=\"percent\">%</span>';\n  let content;\n  if (busyPercent === null) percent = null;\n\n  if (markerStatus === \"percent\") {\n    content = ['<p class=\"busy_percent\">', busyPercent, percent].join('');\n  } else if (markerStatus === \"text\") {\n    content = ['<p class=\"busy_text\">', busyText].join('');\n  }\n\n  return {\n    content: [marker_div, '<div class=\"franchise_icon\">', franchiseIcon, '</div>', '<div class=\"icon_div\">', content, '</p>', '</div>', '</div>'].join(''),\n    size: new navermaps.Size(48, 48),\n    anchor: new navermaps.Point(11, 35)\n  }; //     return (\n  //         {\n  //         content:[ \n  //                         marker_div,\n  //                             '<div class=\"franchise_icon\">',\n  //                                 franchiseIcon,\n  //                             '</div>',\n  //                             '<div class=\"icon_div\">',\n  //                                 '<p class=\"busy_percent\">',\n  //                                 busyPercent,\n  //                                 percent,\n  //                                 '</p>',\n  //                             '</div>',\n  //                         '</div>'].join(''),\n  //         size: new navermaps.Size(48, 48),\n  //         anchor: new navermaps.Point(11, 35)\n  //         }\n  //     )\n  //     return (\n  //         {\n  //         content:[ \n  //                         marker_div,\n  //                             '<div class=\"franchise_icon\">',\n  //                                 franchiseIcon,\n  //                             '</div>',\n  //                             '<div class=\"icon_div\">',\n  //                                 '<p class=\"busy_text\">',\n  //                                 busyText,\n  //                                 '</p>',\n  //                             '</div>',\n  //                         '</div>'].join(''),\n  //         size: new navermaps.Size(48, 48),\n  //         anchor: new navermaps.Point(11, 35)\n  //         }\n  //     )\n  // }\n};\n/*\r\nconst CustomMarker = (marker_div,busy, name, icon_img) => {\r\n\tconst navermaps = window.naver.maps;\r\n\r\n\treturn (\r\n\t\t{\r\n        content:[ \r\n\t\t\t\t\t\tmarker_div,\r\n\t\t\t\t\t \t\t'<div class=\"icon_div\">',\r\n\t\t\t\t\t\t\t\ticon_img,\r\n\t\t\t\t\t\t\t'</div>',\r\n\t\t\t\t\t\t\t'<div class=\"busy\">',\r\n\t\t\t\t\t\t\t\tparseInt(busy),\r\n\t\t\t\t\t\t\t'<div>',\r\n\t\t\t\t\t\t'</div>'].join(''),\r\n\r\n        size: new navermaps.Size(48, 48),\r\n        anchor: new navermaps.Point(11, 35)\r\n    }\r\n\t)\r\n}\r\n*/\n\n\nconst CafeMarker = ({\n  lat,\n  lng,\n  busy,\n  busy_color,\n  cafe_name,\n  markerStatus,\n  onCafeClick\n}) => {\n  let title,\n      marker_div,\n      franchiseIcon = '',\n      iconImgArray,\n      rand_index,\n      busyText = '';\n  iconImgArray = ['<img src=\"/images/marker/HollysCoffee.svg\" class=\"franchise_img\" alt=\"cafe\">', '<img src=\"/images/marker/Starbucks.svg\" class=\"franchise_img\" alt=\"cafe\">', '<img src=\"/images/marker/TomNToms.svg\" class=\"franchise_img\" alt=\"cafe\">'];\n  rand_index = parseInt(busy) % 3;\n  marker_div = '<div class=\"map_marker_div';\n  franchiseIcon = iconImgArray[rand_index];\n\n  if (busy_color === 'red') {\n    title = 'red_marker';\n    marker_div = marker_div + ' busy_red\">';\n    busyText = \"많음\";\n  } else if (busy_color === 'yellow') {\n    title = 'yellow_marker';\n    marker_div = marker_div + ' busy_yellow\">';\n    busyText = \"보통\";\n  } else if (busy_color === 'green') {\n    title = 'green_marker';\n    marker_div = marker_div + ' busy_green\">';\n    busyText = \"적음\";\n  } else if (busy_color === 'grey') {\n    title = 'grey_marker';\n    marker_div = marker_div + ' busy_grey\">';\n  }\n\n  let busyPercent = parseInt(busy);\n  if (busyPercent === -1) busyPercent = null;\n  return /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: lat,\n      lng: lng\n    },\n    icon: CustomMarker(marker_div, busyPercent, cafe_name, busyText, franchiseIcon, markerStatus),\n    title: title,\n    onClick: () => onCafeClick({\n      lat: lat,\n      lng: lng,\n      cafename: cafe_name\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 3\n    }\n  });\n};\n\nCafeMarker.propTypes = {\n  lat: PropTypes.number.isRequired,\n  lng: PropTypes.number.isRequired,\n  busy: PropTypes.string.isRequired,\n  busy_color: PropTypes.string.isRequired,\n  cafe_name: PropTypes.string.isRequired\n};\nexport default CafeMarker;","map":{"version":3,"sources":["E:/project/cafeproject/cafein_client/src/components/Cafemarker.js"],"names":["React","PropTypes","Marker","CustomMarker","marker_div","busyPercent","name","busyText","franchiseIcon","markerStatus","navermaps","window","naver","maps","percent","content","join","size","Size","anchor","Point","CafeMarker","lat","lng","busy","busy_color","cafe_name","onCafeClick","title","iconImgArray","rand_index","parseInt","cafename","propTypes","number","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Marker } from 'react-naver-maps'; // 패키지 불러오기\r\nimport './marker.css';\r\n\r\n\r\nconst CustomMarker = (marker_div, busyPercent, name, busyText, franchiseIcon,markerStatus) => {\r\n\tconst navermaps = window.naver.maps;\r\n    let percent = '<span class=\"percent\">%</span>';\r\n    \r\n    \r\n    let content;\r\n    if (busyPercent===null)\r\n        percent = null;\r\n\r\n\r\n    if (markerStatus===\"percent\") {\r\n        \r\n         content = ['<p class=\"busy_percent\">',\r\n                    busyPercent,\r\n                    percent].join('');\r\n\r\n\r\n\r\n    }\r\n\r\n    else if (markerStatus===\"text\") {\r\n         content = ['<p class=\"busy_text\">',\r\n                        busyText].join('');\r\n\r\n    }\r\n\r\n    return (\r\n        {\r\n        content:[ \r\n                        marker_div,\r\n                            '<div class=\"franchise_icon\">',\r\n                                franchiseIcon,\r\n                            '</div>',\r\n                            '<div class=\"icon_div\">',\r\n                               content,\r\n                                '</p>',\r\n                            '</div>',\r\n                        '</div>'].join(''),\r\n\r\n        size: new navermaps.Size(48, 48),\r\n        anchor: new navermaps.Point(11, 35)\r\n        }\r\n    )\r\n\r\n    \r\n    //     return (\r\n    //         {\r\n    //         content:[ \r\n    //                         marker_div,\r\n    //                             '<div class=\"franchise_icon\">',\r\n    //                                 franchiseIcon,\r\n    //                             '</div>',\r\n    //                             '<div class=\"icon_div\">',\r\n    //                                 '<p class=\"busy_percent\">',\r\n    //                                 busyPercent,\r\n    //                                 percent,\r\n    //                                 '</p>',\r\n    //                             '</div>',\r\n    //                         '</div>'].join(''),\r\n\r\n    //         size: new navermaps.Size(48, 48),\r\n    //         anchor: new navermaps.Point(11, 35)\r\n    //         }\r\n    //     )\r\n    \r\n\r\n    //     return (\r\n    //         {\r\n    //         content:[ \r\n    //                         marker_div,\r\n    //                             '<div class=\"franchise_icon\">',\r\n    //                                 franchiseIcon,\r\n    //                             '</div>',\r\n    //                             '<div class=\"icon_div\">',\r\n    //                                 '<p class=\"busy_text\">',\r\n    //                                 busyText,\r\n    //                                 '</p>',\r\n    //                             '</div>',\r\n    //                         '</div>'].join(''),\r\n\r\n    //         size: new navermaps.Size(48, 48),\r\n    //         anchor: new navermaps.Point(11, 35)\r\n    //         }\r\n    //     )\r\n\r\n    // }\r\n       \r\n\r\n}\r\n/*\r\nconst CustomMarker = (marker_div,busy, name, icon_img) => {\r\n\tconst navermaps = window.naver.maps;\r\n\r\n\treturn (\r\n\t\t{\r\n        content:[ \r\n\t\t\t\t\t\tmarker_div,\r\n\t\t\t\t\t \t\t'<div class=\"icon_div\">',\r\n\t\t\t\t\t\t\t\ticon_img,\r\n\t\t\t\t\t\t\t'</div>',\r\n\t\t\t\t\t\t\t'<div class=\"busy\">',\r\n\t\t\t\t\t\t\t\tparseInt(busy),\r\n\t\t\t\t\t\t\t'<div>',\r\n\t\t\t\t\t\t'</div>'].join(''),\r\n\r\n        size: new navermaps.Size(48, 48),\r\n        anchor: new navermaps.Point(11, 35)\r\n    }\r\n\t)\r\n}\r\n*/\r\n\r\nconst CafeMarker = ({lat, lng, busy, busy_color, cafe_name, markerStatus,onCafeClick}) => {\r\n\tlet title, marker_div, franchiseIcon='', iconImgArray, rand_index, busyText='';\r\n\r\n\ticonImgArray = [ '<img src=\"/images/marker/HollysCoffee.svg\" class=\"franchise_img\" alt=\"cafe\">', '<img src=\"/images/marker/Starbucks.svg\" class=\"franchise_img\" alt=\"cafe\">', '<img src=\"/images/marker/TomNToms.svg\" class=\"franchise_img\" alt=\"cafe\">'];\r\n\trand_index = parseInt(busy) % 3 ;\r\n\tmarker_div = '<div class=\"map_marker_div';\r\n\tfranchiseIcon =iconImgArray[rand_index];\r\n\tif (busy_color==='red') {\r\n\t\ttitle = 'red_marker';\r\n\t\tmarker_div = marker_div + ' busy_red\">';\r\n\t\tbusyText = \"많음\";\r\n\t}\r\n\telse if (busy_color==='yellow') {\r\n\t\ttitle = 'yellow_marker';\r\n\t\tmarker_div = marker_div + ' busy_yellow\">';\r\n\t\tbusyText = \"보통\";\r\n\t}\r\n\telse if (busy_color==='green') {\r\n\t\ttitle = 'green_marker';\r\n\t\tmarker_div = marker_div + ' busy_green\">';\r\n\t\tbusyText = \"적음\";\r\n\t}\r\n\r\n\telse if (busy_color==='grey') {\r\n\t\ttitle = 'grey_marker';\r\n\t\tmarker_div = marker_div + ' busy_grey\">';\r\n\r\n    }\r\n    \r\n    let busyPercent = parseInt(busy);\r\n    if (busyPercent === -1)\r\n        busyPercent = null;\r\n\t\r\n\treturn (  \r\n\t\t<Marker\r\n\t\t\tposition={{ lat: lat, lng: lng }}\r\n\t\t\ticon={CustomMarker(marker_div, busyPercent, cafe_name, busyText, franchiseIcon, markerStatus)}\r\n            title= {title}\r\n            onClick={()=>onCafeClick({lat: lat, lng: lng, cafename: cafe_name})}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\n\r\nCafeMarker.propTypes = {\r\n\tlat: PropTypes.number.isRequired,\r\n\tlng: PropTypes.number.isRequired,\r\n\tbusy: PropTypes.string.isRequired,\r\n\tbusy_color: PropTypes.string.isRequired,\r\n\tcafe_name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default CafeMarker;\r\n"]},"metadata":{},"sourceType":"module"}