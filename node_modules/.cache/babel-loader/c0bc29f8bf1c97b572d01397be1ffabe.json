{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/cafein_server/client/src/components/Cafemarker.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Marker } from 'react-naver-maps'; // 패키지 불러오기\n\nimport './marker.css';\n\nconst CustomMarker = (marker_div, busy, name, icon_img) => {\n  const navermaps = window.naver.maps;\n  return {\n    content: [marker_div, '<div class=\"icon_div\">', icon_img, '</div>', '<div class=\"busy\">', parseInt(busy), '<div>', '</div>'].join(''),\n    size: new navermaps.Size(48, 48),\n    anchor: new navermaps.Point(11, 35)\n  };\n};\n\nlet generateRandom = function (min, max) {\n  let ranNum = Math.floor(Math.random() * (max - min + 1)) + min;\n  return ranNum;\n};\n\nconst CafeMarker = ({\n  lat,\n  lng,\n  busy,\n  busy_color,\n  cafe_name\n}) => {\n  let title, marker_div, icon_img, iconImgArray, rand_index;\n  icon_img = '<img src=\"/images/ui/s1_m.svg\" alt=\"cafe\">';\n  iconImgArray = ['<img src=\"/images/ui/s1_m.svg\" alt=\"cafe\">', '<img src=\"/images/ui/s2_m.svg\" alt=\"cafe\">', '<img src=\"/images/ui/s3_m.svg\" alt=\"cafe\">'];\n  rand_index = generateRandom(0, 2);\n  marker_div = '<div class=\"map_marker_div';\n\n  if (busy_color === 'red') {\n    title = 'red_marker';\n    icon_img = '<img src=\"/images/ui/s1_m.svg\" alt=\"cafe\">';\n    marker_div = marker_div + ' busy_red\">';\n  } else if (busy_color === 'yellow') {\n    title = 'yellow_marker';\n    marker_div = marker_div + ' busy_yellow\">';\n    icon_img = '<img src=\"/images/ui/s2_m.svg\" alt=\"cafe\">';\n  } else if (busy_color === 'green') {\n    title = 'green_marker';\n    marker_div = marker_div + ' busy_green\">';\n    icon_img = '<img src=\"/images/ui/s3_m.svg\" alt=\"cafe\">';\n  } else if (busy_color === 'grey') {\n    title = 'grey_marker';\n    marker_div = marker_div + ' busy_grey\">';\n  }\n\n  icon_img = iconImgArray[rand_index];\n  return /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: lat,\n      lng: lng\n    },\n    icon: CustomMarker(marker_div, busy, cafe_name, icon_img),\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  });\n};\n\nCafeMarker.propTypes = {\n  lat: PropTypes.number.isRequired,\n  lng: PropTypes.number.isRequired,\n  busy: PropTypes.string.isRequired,\n  busy_color: PropTypes.string.isRequired,\n  cafe_name: PropTypes.string.isRequired\n};\nexport default CafeMarker;","map":{"version":3,"sources":["/home/ec2-user/cafein_server/client/src/components/Cafemarker.js"],"names":["React","PropTypes","Marker","CustomMarker","marker_div","busy","name","icon_img","navermaps","window","naver","maps","content","parseInt","join","size","Size","anchor","Point","generateRandom","min","max","ranNum","Math","floor","random","CafeMarker","lat","lng","busy_color","cafe_name","title","iconImgArray","rand_index","propTypes","number","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Marker } from 'react-naver-maps'; // 패키지 불러오기\nimport './marker.css';\n\n\nconst CustomMarker = (marker_div,busy, name, icon_img) => {\n\tconst navermaps = window.naver.maps;\n\n\treturn (\n\t\t{\n        content:[ \n\t\t\t\t\t\tmarker_div,\n\t\t\t\t\t \t\t'<div class=\"icon_div\">',\n\t\t\t\t\t\t\t\ticon_img,\n\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t'<div class=\"busy\">',\n\t\t\t\t\t\t\t\tparseInt(busy),\n\t\t\t\t\t\t\t'<div>',\n\t\t\t\t\t\t'</div>'].join(''),\n\n        size: new navermaps.Size(48, 48),\n        anchor: new navermaps.Point(11, 35)\n    }\n\t)\n}\nlet generateRandom = function (min, max) {\n let ranNum = Math.floor(Math.random()*(max-min+1)) + min;\n  return ranNum;\n}\n\nconst CafeMarker = ({lat, lng, busy, busy_color, cafe_name}) => {\n\tlet title, marker_div, icon_img, iconImgArray, rand_index;\n\ticon_img = '<img src=\"/images/ui/s1_m.svg\" alt=\"cafe\">';\n\ticonImgArray = [ '<img src=\"/images/ui/s1_m.svg\" alt=\"cafe\">', '<img src=\"/images/ui/s2_m.svg\" alt=\"cafe\">', '<img src=\"/images/ui/s3_m.svg\" alt=\"cafe\">'];\n\trand_index = generateRandom(0,2);\n\tmarker_div = '<div class=\"map_marker_div';\n\tif (busy_color==='red') {\n\t\ttitle = 'red_marker';\n\t\ticon_img = '<img src=\"/images/ui/s1_m.svg\" alt=\"cafe\">';\n\t\tmarker_div = marker_div + ' busy_red\">';\n\t}\n\telse if (busy_color==='yellow') {\n\t\ttitle = 'yellow_marker';\n\t\tmarker_div = marker_div + ' busy_yellow\">';\n\t\ticon_img = '<img src=\"/images/ui/s2_m.svg\" alt=\"cafe\">';\n\t}\n\telse if (busy_color==='green') {\n\t\ttitle = 'green_marker';\n\t\tmarker_div = marker_div + ' busy_green\">';\n\t\ticon_img = '<img src=\"/images/ui/s3_m.svg\" alt=\"cafe\">';\n\t}\n\n\telse if (busy_color==='grey') {\n\t\ttitle = 'grey_marker';\n\t\tmarker_div = marker_div + ' busy_grey\">';\n\t}\n\ticon_img =iconImgArray[rand_index];\n\treturn (  \n\t\t<Marker\n\t\t\tposition={{ lat: lat, lng: lng }}\n\t\t\ticon={CustomMarker(marker_div, busy, cafe_name, icon_img)}\n\t\t\ttitle= {title}\n\t\t/>\n\t)\n}\n\n\nCafeMarker.propTypes = {\n\tlat: PropTypes.number.isRequired,\n\tlng: PropTypes.number.isRequired,\n\tbusy: PropTypes.string.isRequired,\n\tbusy_color: PropTypes.string.isRequired,\n\tcafe_name: PropTypes.string.isRequired\n}\n\nexport default CafeMarker;\n"]},"metadata":{},"sourceType":"module"}